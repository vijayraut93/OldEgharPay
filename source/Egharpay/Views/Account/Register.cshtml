@model Egharpay.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
}
@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @*<h2>@ViewBag.Title.</h2>
        <h4>Create a new account.</h4>*@
    @*<hr />*@
    @*<div class="form-group">
            @Html.ValidationSummary("", new { @class = "help-block" })
        </div>*@
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>INSPINIA | Registry</title>
        <link href="~/Content/bootstrap.min.css" rel="stylesheet">
        <link href="~/Fonts/font-awesome/css/font-awesome.css" rel="stylesheet">
        <link href="~/Content/animate.css" rel="stylesheet">
        <link href="~/Content/css/Site.css" rel="stylesheet">
    </head>

    <body class="gray-bg">

        <div class="middle-box text-center loginscreen   animated fadeInDown">
            <div ng-app="Egharpay">
                <div class="middle-box text-center loginscreen animated fadeInDown" ng-controller="RegisterController as model">
                    <div>
                        @*<div>
                                <h1 class="logo-element">Egharpay</h1>
                            </div>*@
                        <h3>Register to Egharpay</h3>
                        <p>Create account to see it in action.</p>
                        @using (Html.BeginForm(new { @class = "m-t" }))
                        {
                            if (ViewContext.ViewData.ModelState.Any(x => x.Key == ""))
                            {
                                <div class="form-group alert alert-danger">

                                    @Html.ValidationSummary(false, null, new { @class = "" })

                                </div>

                            }
                            <div class="form-group">
                                <div>
                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "Firstname" })
                                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Lastname" })
                                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                                    <div class="form-group">
                                        <div>
                                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div>
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div>
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "ConfirmPassword" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div>
                                            @Html.TextBoxFor(m => m.Pincode, new { @class = "form-control", @placeholder = "Pincode" })
                                            @Html.ValidationMessageFor(m => m.Pincode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <p class="text-muted text-left">
                                        <small>
                                            <a ng-href="/Pincode/Index">Find pincode?&nbsp;&nbsp;&nbsp;</a>
                                            OR <a ng-click="model.addPincode();" id="findZipCode">&nbsp;&nbsp;&nbsp; Get pincode from current location</a>
                                        </small>
                                    </p>
                                    <p class="text-muted text-right">
                                        <small></small>
                                    </p>
                                    <button type="submit" class="btn btn-primary block full-width m-b">Register</button>

                                    <p class="text-muted text-center">
                                        <small>Already have an account?</small>
                                    </p>
                                    <a class="btn btn-sm btn-white btn-block" href="@Url.Action("Login", "Pages")">Login</a>

                        }
                        <p class="m-t"> <small>Inspinia we app framework base on Bootstrap 3 &copy; 2014</small> </p>
                    </div>
                </div>
            </div>
        </div>
    </body>



</html>
@Scripts.Render("~/Scripts/bower")
    @Scripts.Render("~/Scripts/Application")

}

<script src="~/bower_components/jquery/dist/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDcqnWhG3ozWTY6ONe-u4_Y2pk_iTiST9Y" async defer></script>

<script>
    //jQuery(function () {
    //    jQuery(".end-date, .termination-date").remove();
    //});

    //var country, state, city, pinCode, map, latitude, longitude, count, pin;

    //function initMap() {
    //    var mapCenter = new google.maps.LatLng(47.6145, -122.3418); //Google map Coordinates
    //    map = new google.maps.Map($("#map")[0], {
    //        center: mapCenter,
    //        zoom: 8
    //    });
    //}

    //jQuery("#findZipCode").click(function () {
    //    if ("geolocation" in navigator) {
    //        navigator.geolocation.getCurrentPosition(function (position) {
    //            latitude = position.coords.latitude;
    //            longitude = position.coords.longitude;
    //            getLocationDetails();
    //        });
    //    } else {
    //        console.log("Browser doesn't support geolocation!");
    //    }
    //});

    //function createCORSRequest(method, url) {
    //    var xhr = new XMLHttpRequest();
    //    if ("withCredentials" in xhr) {
    //        // XHR for Chrome/Firefox/Opera/Safari.
    //        xhr.open(method, url, true);
    //    } else if (typeof XDomainRequest != "undefined") {
    //        // XDomainRequest for IE.
    //        xhr = new XDomainRequest();
    //        xhr.open(method, url);
    //    } else {
    //        // CORS not supported.
    //        xhr = null;
    //    }
    //    return xhr;
    //}

    //function getLocationDetails() {
    //    var url = "http://maps.googleapis.com/maps/api/geocode/json?latlng=" +
    //            latitude + "," + longitude + "&sensor=true";
    //    var xhr = createCORSRequest('POST', url);
    //    if (!xhr) {
    //        alert('CORS not supported');
    //    }
    //    xhr.onload = function () {
    //        var data = JSON.parse(xhr.responseText);
    //        if (data.results.length > 0) {
    //            var locationDetails = data.results[0].formatted_address;
    //            var value = locationDetails.split(",");
    //            count = value.length;
    //            country = value[count - 1];
    //            state = value[count - 2];
    //            city = value[count - 3];
    //            pin = state.split(" ");
    //            pinCode = pin[pin.length - 1];
    //            state = state.replace(pinCode, ' ');
    //            alert(pinCode);
    //        }
    //        else {
    //            alert("No location available for provided details.");
    //        }
    //    };
    //    xhr.onerror = function () {
    //        alert('Woops, there was an error making the request.');

    //    };
    //    xhr.send();
    //}
</script>
